name: deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: "deploy"
  cancel-in-progress: false

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: npm
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install dependencies
        run: npm ci
      - name: Build with Next.js
        run: npx --no-install next build
      - name: Add .htaccess
        run: cp deployment/htaccess.txt .htaccess
      - name: Install lftp
        run: sudo apt-get install lftp
      - name: Upload
        run: |
          lftp -e -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_HOST}} "
            set ftp:ssl-allow yes;
            set ftp:ssl-force yes;
            set ftp:ssl-protect-data true;
            mirror -c -e -R --delete --parallel=5 --verbose ./ ./;
            quit"
